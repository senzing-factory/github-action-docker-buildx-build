name: Run docker buildx build
description: Prepare the environment and run docker buildx build.
author: support@senzing.com

inputs:
  aws-region:
    default: "us-east-1"
    description: AWS region used for ECR login
  build-options:
    description: Additional options to pass to docker buildx build
  context:
    default: "."
    description: Context (directory) of the docker build process
  image-repository:
    description: Docker repository (e.g. senzing/senzingapi-runtime)
    required: true
  image-tag:
    default: latest
    description: Docker image tag
  login-to-dockerhub:
    default: true
    description: Bool, login to Dockerhub
  login-to-ecr:
    default: false
    description: Bool, login to ECR
  password:
    description: Access Token for Docker registry
  platforms:
    default: linux/amd64,linux/arm64
    description: Comma-separated list of docker platforms to build (hint - See output of docker buildx ls)
  push:
    default: false
    description: Bool, push image to registry
  registry-server:
    default: docker.io
    description: Docker registry server
  role-session-name:
    description: AWS role session name, required for ECR login
  role-to-assume:
    description: AWS role to assume, required for ECR login
  username:
    description: Username for Docker registry

runs:
  using: composite
  steps:
    - name: checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: "0"
        submodules: recursive

    - name: set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: docker list platforms
      run: docker buildx ls
      shell: bash

    - if: ${{ inputs.login-to-dockerhub }}
      name: dockerhub login
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.registry-server }}
        username: ${{ inputs.username }}
        password: ${{ inputs.password }}

    - if: ${{ inputs.login-to-ecr }}
      name: configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ inputs.aws-region }}
        role-session-name: ${{ inputs.role-session-name }}
        role-to-assume: ${{ inputs.role-to-assume }}

    - id: login-ecr-public
      if: ${{ inputs.login-to-ecr }}
      name: login to Amazon ECR Public
      uses: aws-actions/amazon-ecr-login@v2
      with:
        registry-type: public

    - name: generate tags
      run: |
        CLEANED_TAG=$(echo ${{ inputs.image-tag }} | tr -d "/#" )
        tags=""
        if ${{ inputs.login-to-ecr }}; then
          tags="${{ steps.login-ecr-public.outputs.registry }}/${{ inputs.ecr-image-repository }}:$CLEANED_TAG,"
          tags="${tags}${{ steps.login-ecr-public.outputs.registry }}/${{ inputs.ecr-image-repository }}:latest,"
        fi
        tags="${tags}${{ inputs.registry-server }}/${{ inputs.image-repository }}:$CLEANED_TAG,"
        tags="${tags}${{ inputs.registry-server }}/${{ inputs.image-repository }}:latest"
        echo "[INFO] tags are: $tags"
        echo "TAGS=${tags}" >> "$GITHUB_ENV"

    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        build-args: ${{ inputs.build-options }}
        context: ${{ inputs.context }}
        platforms: ${{ inputs.platforms }}
        push: ${{ inputs.push }}
        tags: ${{ env.TAGS }}

branding:
  icon: upload-cloud
  color: green
